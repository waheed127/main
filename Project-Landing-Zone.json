{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "workbooks_4cdc7b26_6f5c_4767_bb64_2fef91c6b012_serializedData": {
            "type": "SecureString"
        },
        "virtualNetworks_S1VNet_name": {
            "defaultValue": "S1VNet",
            "type": "String"
        },
        "virtualNetworks_S2Vnet_name": {
            "defaultValue": "S2Vnet",
            "type": "String"
        },
        "azureFirewalls_Firewall_name": {
            "defaultValue": "Firewall",
            "type": "String"
        },
        "publicIPAddresses_FWPiP_name": {
            "defaultValue": "FWPiP",
            "type": "String"
        },
        "publicIPAddresses_PIPGW_name": {
            "defaultValue": "PIPGW",
            "type": "String"
        },
        "virtualNetworks_HubVNet_name": {
            "defaultValue": "HubVNet",
            "type": "String"
        },
        "actionGroups_DDos_Alert_name": {
            "defaultValue": "DDos Alert",
            "type": "String"
        },
        "virtualMachines_BackEndVM_name": {
            "defaultValue": "BackEndVM",
            "type": "String"
        },
        "routeTables_FW_RouteTable_name": {
            "defaultValue": "FW-RouteTable",
            "type": "String"
        },
        "virtualMachines_FrontEndVM_name": {
            "defaultValue": "FrontEndVM",
            "type": "String"
        },
        "bastionHosts_HubVNet_Bastion_name": {
            "defaultValue": "HubVNet-Bastion",
            "type": "String"
        },
        "activitylogalerts_DDos_Alert_name": {
            "defaultValue": "DDos Alert",
            "type": "String"
        },
        "applicationGateways_AppGW0WAF_name": {
            "defaultValue": "AppGW0WAF",
            "type": "String"
        },
        "vaults_vault_m1kxfpgi_name": {
            "defaultValue": "vault-m1kxfpgi",
            "type": "String"
        },
        "firewallPolicies_FirewallPolicy_name": {
            "defaultValue": "FirewallPolicy",
            "type": "String"
        },
        "networkInterfaces_backendvm772_z1_name": {
            "defaultValue": "backendvm772_z1",
            "type": "String"
        },
        "publicIPAddresses_hubvnet_bastion_name": {
            "defaultValue": "hubvnet-bastion",
            "type": "String"
        },
        "networkInterfaces_frontendvm685_z1_name": {
            "defaultValue": "frontendvm685_z1",
            "type": "String"
        },
        "networkSecurityGroups_BackEndVM_nsg_name": {
            "defaultValue": "BackEndVM-nsg",
            "type": "String"
        },
        "networkSecurityGroups_FrontEndVM_nsg_name": {
            "defaultValue": "FrontEndVM-nsg",
            "type": "String"
        },
        "networkSecurityGroups_FrontEndVMnsg303_name": {
            "defaultValue": "FrontEndVMnsg303",
            "type": "String"
        },
        "sqlVirtualMachines_BackEndVM_name": {
            "defaultValue": "BackEndVM",
            "type": "String"
        },
        "workbooks_4cdc7b26_6f5c_4767_bb64_2fef91c6b012_name": {
            "defaultValue": "4cdc7b26-6f5c-4767-bb64-2fef91c6b012",
            "type": "String"
        },
        "ApplicationGatewayWebApplicationFirewallPolicies_WAFPolicy_name": {
            "defaultValue": "WAFPolicy",
            "type": "String"
        },
        "ddosProtectionPlans_DDOS_externalid": {
            "defaultValue": "/subscriptions/753020ef-7eb7-487f-a33c-3eeac4aed62a/resourceGroups/AppMigration/providers/Microsoft.Network/ddosProtectionPlans/DDOS",
            "type": "String"
        }
    },
    "variables": {},
    "resources": [
        {
            "type": "microsoft.insights/actionGroups",
            "apiVersion": "2023-09-01-preview",
            "name": "[parameters('actionGroups_DDos_Alert_name')]",
            "location": "Global",
            "properties": {
                "groupShortName": "[parameters('actionGroups_DDos_Alert_name')]",
                "enabled": true,
                "emailReceivers": [
                    {
                        "name": "Email0_-EmailAction-",
                        "emailAddress": "om29607048800913@depi.eui.edu.eg",
                        "useCommonAlertSchema": true
                    }
                ],
                "smsReceivers": [],
                "webhookReceivers": [],
                "eventHubReceivers": [],
                "itsmReceivers": [],
                "azureAppPushReceivers": [],
                "automationRunbookReceivers": [],
                "voiceReceivers": [],
                "logicAppReceivers": [],
                "azureFunctionReceivers": [],
                "armRoleReceivers": []
            }
        },
        {
            "type": "microsoft.insights/workbooks",
            "apiVersion": "2023-06-01",
            "name": "[parameters('workbooks_4cdc7b26_6f5c_4767_bb64_2fef91c6b012_name')]",
            "location": "westeurope",
            "tags": {
                "hidden-title": "Workbook 1"
            },
            "kind": "shared",
            "identity": {
                "type": "None"
            },
            "properties": {
                "displayName": "Workbook 1",
                "version": "Notebook/1.0",
                "category": "workbook",
                "sourceId": "azure monitor",
                "serializedData": "[parameters('workbooks_4cdc7b26_6f5c_4767_bb64_2fef91c6b012_serializedData')]"
            }
        },
        {
            "type": "Microsoft.Network/ApplicationGatewayWebApplicationFirewallPolicies",
            "apiVersion": "2024-01-01",
            "name": "[parameters('ApplicationGatewayWebApplicationFirewallPolicies_WAFPolicy_name')]",
            "location": "westeurope",
            "properties": {
                "customRules": [],
                "policySettings": {
                    "requestBodyCheck": true,
                    "maxRequestBodySizeInKb": 128,
                    "fileUploadLimitInMb": 100,
                    "state": "Enabled",
                    "mode": "Detection",
                    "requestBodyInspectLimitInKB": 128,
                    "fileUploadEnforcement": true,
                    "requestBodyEnforcement": true
                },
                "managedRules": {
                    "managedRuleSets": [
                        {
                            "ruleSetType": "OWASP",
                            "ruleSetVersion": "3.2",
                            "ruleGroupOverrides": []
                        }
                    ],
                    "exclusions": []
                }
            }
        },
        {
            "type": "Microsoft.Network/azureFirewalls",
            "apiVersion": "2024-01-01",
            "name": "[parameters('azureFirewalls_Firewall_name')]",
            "location": "westeurope",
            "properties": {
                "sku": {
                    "name": "AZFW_VNet",
                    "tier": "Standard"
                },
                "threatIntelMode": "Alert",
                "additionalProperties": {},
                "ipConfigurations": [],
                "networkRuleCollections": [
                    {
                        "name": "VnetsRouting",
                        "id": "[concat(resourceId(concat('Microsoft.Network/azure', parameters('azureFirewalls_Firewall_name'), 's'), parameters('azureFirewalls_Firewall_name')), '/networkRuleCollections/VnetsRouting')]",
                        "properties": {
                            "priority": 100,
                            "action": {
                                "type": "Allow"
                            },
                            "rules": [
                                {
                                    "name": "ToS2",
                                    "protocols": [
                                        "Any",
                                        "ICMP",
                                        "UDP",
                                        "TCP"
                                    ],
                                    "sourceAddresses": [
                                        "10.1.0.0/16"
                                    ],
                                    "destinationAddresses": [
                                        "10.2.0.0/16"
                                    ],
                                    "sourceIpGroups": [],
                                    "destinationIpGroups": [],
                                    "destinationFqdns": [],
                                    "destinationPorts": [
                                        "*"
                                    ]
                                },
                                {
                                    "name": "ToS1",
                                    "protocols": [
                                        "TCP",
                                        "UDP",
                                        "ICMP",
                                        "Any"
                                    ],
                                    "sourceAddresses": [
                                        "10.2.0.0/16"
                                    ],
                                    "destinationAddresses": [
                                        "10.1.0.0/16"
                                    ],
                                    "sourceIpGroups": [],
                                    "destinationIpGroups": [],
                                    "destinationFqdns": [],
                                    "destinationPorts": [
                                        "*"
                                    ]
                                }
                            ]
                        }
                    }
                ],
                "applicationRuleCollections": [],
                "natRuleCollections": []
            }
        },
        {
            "type": "Microsoft.Network/firewallPolicies",
            "apiVersion": "2024-01-01",
            "name": "[parameters('firewallPolicies_FirewallPolicy_name')]",
            "location": "westeurope",
            "properties": {
                "sku": {
                    "tier": "Standard"
                },
                "threatIntelMode": "Alert"
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2024-01-01",
            "name": "[parameters('networkSecurityGroups_BackEndVM_nsg_name')]",
            "location": "westeurope",
            "properties": {
                "securityRules": [
                    {
                        "name": "RDP",
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups/securityRules', parameters('networkSecurityGroups_BackEndVM_nsg_name'), 'RDP')]",
                        "type": "Microsoft.Network/networkSecurityGroups/securityRules",
                        "properties": {
                            "protocol": "TCP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "3389",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 300,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2024-01-01",
            "name": "[parameters('networkSecurityGroups_FrontEndVM_nsg_name')]",
            "location": "westeurope",
            "properties": {
                "securityRules": [
                    {
                        "name": "RDP",
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups/securityRules', parameters('networkSecurityGroups_FrontEndVM_nsg_name'), 'RDP')]",
                        "type": "Microsoft.Network/networkSecurityGroups/securityRules",
                        "properties": {
                            "protocol": "TCP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "3389",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 300,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2024-01-01",
            "name": "[parameters('networkSecurityGroups_FrontEndVMnsg303_name')]",
            "location": "westeurope",
            "properties": {
                "securityRules": [
                    {
                        "name": "RDP",
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups/securityRules', parameters('networkSecurityGroups_FrontEndVMnsg303_name'), 'RDP')]",
                        "type": "Microsoft.Network/networkSecurityGroups/securityRules",
                        "properties": {
                            "protocol": "TCP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "3389",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 300,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2024-01-01",
            "name": "[parameters('publicIPAddresses_FWPiP_name')]",
            "location": "westeurope",
            "sku": {
                "name": "Standard",
                "tier": "Regional"
            },
            "properties": {
                "ipAddress": "172.201.152.201",
                "publicIPAddressVersion": "IPv4",
                "publicIPAllocationMethod": "Static",
                "idleTimeoutInMinutes": 4,
                "ipTags": []
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2024-01-01",
            "name": "[parameters('publicIPAddresses_hubvnet_bastion_name')]",
            "location": "westeurope",
            "sku": {
                "name": "Standard",
                "tier": "Regional"
            },
            "properties": {
                "ipAddress": "20.4.65.147",
                "publicIPAddressVersion": "IPv4",
                "publicIPAllocationMethod": "Static",
                "idleTimeoutInMinutes": 4,
                "ipTags": [],
                "ddosSettings": {
                    "protectionMode": "VirtualNetworkInherited"
                }
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2024-01-01",
            "name": "[parameters('publicIPAddresses_PIPGW_name')]",
            "location": "westeurope",
            "sku": {
                "name": "Standard",
                "tier": "Regional"
            },
            "zones": [
                "1",
                "2",
                "3"
            ],
            "properties": {
                "ipAddress": "20.54.198.184",
                "publicIPAddressVersion": "IPv4",
                "publicIPAllocationMethod": "Static",
                "idleTimeoutInMinutes": 4,
                "ipTags": []
            }
        },
        {
            "type": "Microsoft.Network/routeTables",
            "apiVersion": "2024-01-01",
            "name": "[parameters('routeTables_FW_RouteTable_name')]",
            "location": "westeurope",
            "properties": {
                "disableBgpRoutePropagation": false,
                "routes": [
                    {
                        "name": "route-1",
                        "id": "[resourceId('Microsoft.Network/routeTables/routes', parameters('routeTables_FW_RouteTable_name'), 'route-1')]",
                        "properties": {
                            "addressPrefix": "0.0.0.0/0",
                            "nextHopType": "VirtualAppliance",
                            "nextHopIpAddress": "10.0.0.196",
                            "hasBgpOverride": false
                        },
                        "type": "Microsoft.Network/routeTables/routes"
                    }
                ]
            }
        },
        {
            "type": "Microsoft.RecoveryServices/vaults",
            "apiVersion": "2024-04-30-preview",
            "name": "[parameters('vaults_vault_m1kxfpgi_name')]",
            "location": "westeurope",
            "sku": {
                "name": "RS0",
                "tier": "Standard"
            },
            "properties": {
                "securitySettings": {
                    "softDeleteSettings": {
                        "softDeleteRetentionPeriodInDays": 14,
                        "softDeleteState": "Enabled",
                        "enhancedSecurityState": "Enabled"
                    }
                },
                "redundancySettings": {
                    "standardTierStorageRedundancy": "GeoRedundant",
                    "crossRegionRestore": "Disabled"
                },
                "publicNetworkAccess": "Enabled",
                "restoreSettings": {
                    "crossSubscriptionRestoreSettings": {
                        "crossSubscriptionRestoreState": "Enabled"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2024-07-01",
            "name": "[parameters('virtualMachines_BackEndVM_name')]",
            "location": "westeurope",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_backendvm772_z1_name'))]"
            ],
            "zones": [
                "1"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "Standard_D2s_v3"
                },
                "additionalCapabilities": {
                    "hibernationEnabled": false
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "microsoftsqlserver",
                        "offer": "sql2017-ws2019",
                        "sku": "express",
                        "version": "latest"
                    },
                    "osDisk": {
                        "osType": "Windows",
                        "name": "[concat(parameters('virtualMachines_BackEndVM_name'), '_OsDisk_1_cf7f15b8b1834f50bfd2bc0ec369fba4')]",
                        "createOption": "FromImage",
                        "caching": "ReadWrite",
                        "managedDisk": {
                            "id": "[resourceId('Microsoft.Compute/disks', concat(parameters('virtualMachines_BackEndVM_name'), '_OsDisk_1_cf7f15b8b1834f50bfd2bc0ec369fba4'))]"
                        },
                        "deleteOption": "Delete"
                    },
                    "dataDisks": [
                        {
                            "lun": 0,
                            "name": "[concat(parameters('virtualMachines_BackEndVM_name'), '_DataDisk_0')]",
                            "createOption": "Attach",
                            "caching": "ReadOnly",
                            "writeAcceleratorEnabled": false,
                            "managedDisk": {
                                "id": "[resourceId('Microsoft.Compute/disks', concat(parameters('virtualMachines_BackEndVM_name'), '_DataDisk_0'))]"
                            },
                            "deleteOption": "Detach",
                            "toBeDetached": false
                        },
                        {
                            "lun": 1,
                            "name": "[concat(parameters('virtualMachines_BackEndVM_name'), '_DataDisk_1')]",
                            "createOption": "Attach",
                            "caching": "None",
                            "writeAcceleratorEnabled": false,
                            "managedDisk": {
                                "id": "[resourceId('Microsoft.Compute/disks', concat(parameters('virtualMachines_BackEndVM_name'), '_DataDisk_1'))]"
                            },
                            "deleteOption": "Detach",
                            "toBeDetached": false
                        }
                    ]
                },
                "osProfile": {
                    "computerName": "[parameters('virtualMachines_BackEndVM_name')]",
                    "adminUsername": "App",
                    "windowsConfiguration": {
                        "provisionVMAgent": true,
                        "enableAutomaticUpdates": true,
                        "patchSettings": {
                            "patchMode": "AutomaticByOS",
                            "assessmentMode": "ImageDefault",
                            "enableHotpatching": false
                        }
                    },
                    "secrets": [],
                    "allowExtensionOperations": true,
                    "requireGuestProvisionSignal": true
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_backendvm772_z1_name'))]",
                            "properties": {
                                "deleteOption": "Detach"
                            }
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true
                    }
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2024-07-01",
            "name": "[parameters('virtualMachines_FrontEndVM_name')]",
            "location": "westeurope",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_frontendvm685_z1_name'))]"
            ],
            "zones": [
                "1"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "Standard_D2s_v3"
                },
                "additionalCapabilities": {
                    "hibernationEnabled": false
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "MicrosoftWindowsServer",
                        "offer": "WindowsServer",
                        "sku": "2019-datacenter-gensecond",
                        "version": "latest"
                    },
                    "osDisk": {
                        "osType": "Windows",
                        "name": "[concat(parameters('virtualMachines_FrontEndVM_name'), '_OsDisk_1_957e03ce76644559bffae7325ca2d509')]",
                        "createOption": "FromImage",
                        "caching": "ReadWrite",
                        "managedDisk": {
                            "id": "[resourceId('Microsoft.Compute/disks', concat(parameters('virtualMachines_FrontEndVM_name'), '_OsDisk_1_957e03ce76644559bffae7325ca2d509'))]"
                        },
                        "deleteOption": "Delete"
                    },
                    "dataDisks": [],
                    "diskControllerType": "SCSI"
                },
                "osProfile": {
                    "computerName": "[parameters('virtualMachines_FrontEndVM_name')]",
                    "adminUsername": "App",
                    "windowsConfiguration": {
                        "provisionVMAgent": true,
                        "enableAutomaticUpdates": true,
                        "patchSettings": {
                            "patchMode": "AutomaticByOS",
                            "assessmentMode": "ImageDefault",
                            "enableHotpatching": false
                        }
                    },
                    "secrets": [],
                    "allowExtensionOperations": true,
                    "requireGuestProvisionSignal": true
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_frontendvm685_z1_name'))]",
                            "properties": {
                                "deleteOption": "Detach"
                            }
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true
                    }
                }
            }
        },
        {
            "type": "microsoft.insights/activitylogalerts",
            "apiVersion": "2020-10-01",
            "name": "[parameters('activitylogalerts_DDos_Alert_name')]",
            "location": "global",
            "dependsOn": [
                "[resourceId('microsoft.insights/actionGroups', parameters('actionGroups_DDos_Alert_name'))]"
            ],
            "properties": {
                "scopes": [
                    "[parameters('ddosProtectionPlans_DDOS_externalid')]"
                ],
                "condition": {
                    "allOf": [
                        {
                            "field": "category",
                            "equals": "Administrative"
                        },
                        {
                            "field": "operationName",
                            "equals": "Microsoft.Network/ddosProtectionPlans/write"
                        }
                    ]
                },
                "actions": {
                    "actionGroups": [
                        {
                            "actionGroupId": "[resourceId('microsoft.insights/actionGroups', parameters('actionGroups_DDos_Alert_name'))]",
                            "webhookProperties": {}
                        }
                    ]
                },
                "enabled": true
            }
        },
        {
            "type": "Microsoft.Network/firewallPolicies/ruleCollectionGroups",
            "apiVersion": "2024-01-01",
            "name": "[concat(parameters('firewallPolicies_FirewallPolicy_name'), '/DefaultDnatRuleCollectionGroup')]",
            "location": "westeurope",
            "dependsOn": [
                "[resourceId('Microsoft.Network/firewallPolicies', parameters('firewallPolicies_FirewallPolicy_name'))]"
            ],
            "properties": {
                "priority": 100,
                "ruleCollections": []
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups/securityRules",
            "apiVersion": "2024-01-01",
            "name": "[concat(parameters('networkSecurityGroups_BackEndVM_nsg_name'), '/RDP')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_BackEndVM_nsg_name'))]"
            ],
            "properties": {
                "protocol": "TCP",
                "sourcePortRange": "*",
                "destinationPortRange": "3389",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 300,
                "direction": "Inbound",
                "sourcePortRanges": [],
                "destinationPortRanges": [],
                "sourceAddressPrefixes": [],
                "destinationAddressPrefixes": []
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups/securityRules",
            "apiVersion": "2024-01-01",
            "name": "[concat(parameters('networkSecurityGroups_FrontEndVM_nsg_name'), '/RDP')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_FrontEndVM_nsg_name'))]"
            ],
            "properties": {
                "protocol": "TCP",
                "sourcePortRange": "*",
                "destinationPortRange": "3389",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 300,
                "direction": "Inbound",
                "sourcePortRanges": [],
                "destinationPortRanges": [],
                "sourceAddressPrefixes": [],
                "destinationAddressPrefixes": []
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups/securityRules",
            "apiVersion": "2024-01-01",
            "name": "[concat(parameters('networkSecurityGroups_FrontEndVMnsg303_name'), '/RDP')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_FrontEndVMnsg303_name'))]"
            ],
            "properties": {
                "protocol": "TCP",
                "sourcePortRange": "*",
                "destinationPortRange": "3389",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 300,
                "direction": "Inbound",
                "sourcePortRanges": [],
                "destinationPortRanges": [],
                "sourceAddressPrefixes": [],
                "destinationAddressPrefixes": []
            }
        },
        {
            "type": "Microsoft.Network/routeTables/routes",
            "apiVersion": "2024-01-01",
            "name": "[concat(parameters('routeTables_FW_RouteTable_name'), '/route-1')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/routeTables', parameters('routeTables_FW_RouteTable_name'))]"
            ],
            "properties": {
                "addressPrefix": "0.0.0.0/0",
                "nextHopType": "VirtualAppliance",
                "nextHopIpAddress": "10.0.0.196",
                "hasBgpOverride": false
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2024-01-01",
            "name": "[concat(parameters('virtualNetworks_HubVNet_name'), '/AzureBastionSubnet')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_HubVNet_name'))]"
            ],
            "properties": {
                "addressPrefixes": [
                    "10.0.1.0/26"
                ],
                "delegations": [],
                "privateEndpointNetworkPolicies": "Disabled",
                "privateLinkServiceNetworkPolicies": "Enabled"
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2024-01-01",
            "name": "[concat(parameters('virtualNetworks_HubVNet_name'), '/AzureFirewallSubnet')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_HubVNet_name'))]"
            ],
            "properties": {
                "addressPrefixes": [
                    "10.0.0.192/26"
                ],
                "delegations": [],
                "privateEndpointNetworkPolicies": "Disabled",
                "privateLinkServiceNetworkPolicies": "Enabled"
            }
        },
        {
            "type": "Microsoft.RecoveryServices/vaults/backupPolicies",
            "apiVersion": "2024-04-30-preview",
            "name": "[concat(parameters('vaults_vault_m1kxfpgi_name'), '/DailyPolicy-m1kxfpkx')]",
            "dependsOn": [
                "[resourceId('Microsoft.RecoveryServices/vaults', parameters('vaults_vault_m1kxfpgi_name'))]"
            ],
            "properties": {
                "backupManagementType": "AzureStorage",
                "workLoadType": "AzureFileShare",
                "schedulePolicy": {
                    "schedulePolicyType": "SimpleSchedulePolicy",
                    "scheduleRunFrequency": "Daily",
                    "scheduleRunTimes": [
                        "2024-09-27T19:30:00Z"
                    ],
                    "scheduleWeeklyFrequency": 0
                },
                "retentionPolicy": {
                    "retentionPolicyType": "LongTermRetentionPolicy",
                    "dailySchedule": {
                        "retentionTimes": [
                            "2024-09-27T19:30:00Z"
                        ],
                        "retentionDuration": {
                            "count": 30,
                            "durationType": "Days"
                        }
                    }
                },
                "timeZone": "UTC",
                "protectedItemsCount": 0
            }
        },
        {
            "type": "Microsoft.RecoveryServices/vaults/backupPolicies",
            "apiVersion": "2024-04-30-preview",
            "name": "[concat(parameters('vaults_vault_m1kxfpgi_name'), '/DefaultPolicy')]",
            "dependsOn": [
                "[resourceId('Microsoft.RecoveryServices/vaults', parameters('vaults_vault_m1kxfpgi_name'))]"
            ],
            "properties": {
                "backupManagementType": "AzureIaasVM",
                "instantRPDetails": {},
                "schedulePolicy": {
                    "schedulePolicyType": "SimpleSchedulePolicy",
                    "scheduleRunFrequency": "Daily",
                    "scheduleRunTimes": [
                        "2024-09-28T02:00:00Z"
                    ],
                    "scheduleWeeklyFrequency": 0
                },
                "retentionPolicy": {
                    "retentionPolicyType": "LongTermRetentionPolicy",
                    "dailySchedule": {
                        "retentionTimes": [
                            "2024-09-28T02:00:00Z"
                        ],
                        "retentionDuration": {
                            "count": 30,
                            "durationType": "Days"
                        }
                    }
                },
                "instantRpRetentionRangeInDays": 2,
                "timeZone": "UTC",
                "protectedItemsCount": 0
            }
        },
        {
            "type": "Microsoft.RecoveryServices/vaults/backupPolicies",
            "apiVersion": "2024-04-30-preview",
            "name": "[concat(parameters('vaults_vault_m1kxfpgi_name'), '/EnhancedPolicy')]",
            "dependsOn": [
                "[resourceId('Microsoft.RecoveryServices/vaults', parameters('vaults_vault_m1kxfpgi_name'))]"
            ],
            "properties": {
                "backupManagementType": "AzureIaasVM",
                "policyType": "V2",
                "instantRPDetails": {},
                "schedulePolicy": {
                    "schedulePolicyType": "SimpleSchedulePolicyV2",
                    "scheduleRunFrequency": "Hourly",
                    "hourlySchedule": {
                        "interval": 4,
                        "scheduleWindowStartTime": "2024-09-28T08:00:00Z",
                        "scheduleWindowDuration": 12
                    }
                },
                "retentionPolicy": {
                    "retentionPolicyType": "LongTermRetentionPolicy",
                    "dailySchedule": {
                        "retentionTimes": [
                            "2024-09-28T08:00:00Z"
                        ],
                        "retentionDuration": {
                            "count": 30,
                            "durationType": "Days"
                        }
                    }
                },
                "instantRpRetentionRangeInDays": 2,
                "timeZone": "UTC",
                "protectedItemsCount": 0
            }
        },
        {
            "type": "Microsoft.RecoveryServices/vaults/backupPolicies",
            "apiVersion": "2024-04-30-preview",
            "name": "[concat(parameters('vaults_vault_m1kxfpgi_name'), '/HourlyLogBackup')]",
            "dependsOn": [
                "[resourceId('Microsoft.RecoveryServices/vaults', parameters('vaults_vault_m1kxfpgi_name'))]"
            ],
            "properties": {
                "backupManagementType": "AzureWorkload",
                "workLoadType": "SQLDataBase",
                "settings": {
                    "timeZone": "UTC",
                    "issqlcompression": false,
                    "isCompression": false
                },
                "subProtectionPolicy": [
                    {
                        "policyType": "Full",
                        "schedulePolicy": {
                            "schedulePolicyType": "SimpleSchedulePolicy",
                            "scheduleRunFrequency": "Daily",
                            "scheduleRunTimes": [
                                "2024-09-28T02:00:00Z"
                            ],
                            "scheduleWeeklyFrequency": 0
                        },
                        "retentionPolicy": {
                            "retentionPolicyType": "LongTermRetentionPolicy",
                            "dailySchedule": {
                                "retentionTimes": [
                                    "2024-09-28T02:00:00Z"
                                ],
                                "retentionDuration": {
                                    "count": 30,
                                    "durationType": "Days"
                                }
                            }
                        }
                    },
                    {
                        "policyType": "Log",
                        "schedulePolicy": {
                            "schedulePolicyType": "LogSchedulePolicy",
                            "scheduleFrequencyInMins": 60
                        },
                        "retentionPolicy": {
                            "retentionPolicyType": "SimpleRetentionPolicy",
                            "retentionDuration": {
                                "count": 30,
                                "durationType": "Days"
                            }
                        }
                    }
                ],
                "protectedItemsCount": 0
            }
        },
        {
            "type": "Microsoft.RecoveryServices/vaults/replicationAlertSettings",
            "apiVersion": "2024-04-01",
            "name": "[concat(parameters('vaults_vault_m1kxfpgi_name'), '/defaultAlertSetting')]",
            "dependsOn": [
                "[resourceId('Microsoft.RecoveryServices/vaults', parameters('vaults_vault_m1kxfpgi_name'))]"
            ],
            "properties": {
                "sendToOwners": "DoNotSend",
                "customEmailAddresses": []
            }
        },
        {
            "type": "Microsoft.RecoveryServices/vaults/replicationVaultSettings",
            "apiVersion": "2024-04-01",
            "name": "[concat(parameters('vaults_vault_m1kxfpgi_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.RecoveryServices/vaults', parameters('vaults_vault_m1kxfpgi_name'))]"
            ],
            "properties": {}
        },
        {
            "type": "Microsoft.SqlVirtualMachine/sqlVirtualMachines",
            "apiVersion": "2023-10-01",
            "name": "[parameters('sqlVirtualMachines_BackEndVM_name')]",
            "location": "westeurope",
            "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines', parameters('virtualMachines_BackEndVM_name'))]"
            ],
            "properties": {
                "virtualMachineResourceId": "[resourceId('Microsoft.Compute/virtualMachines', parameters('virtualMachines_BackEndVM_name'))]",
                "sqlImageOffer": "SQL2017-WS2019",
                "sqlServerLicenseType": "PAYG",
                "sqlManagement": "Full",
                "leastPrivilegeMode": "Enabled",
                "sqlImageSku": "Express",
                "enableAutomaticUpgrade": true
            }
        },
        {
            "type": "Microsoft.Network/bastionHosts",
            "apiVersion": "2024-01-01",
            "name": "[parameters('bastionHosts_HubVNet_Bastion_name')]",
            "location": "westeurope",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_hubvnet_bastion_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_HubVNet_name'), 'AzureBastionSubnet')]"
            ],
            "sku": {
                "name": "Basic"
            },
            "properties": {
                "dnsName": "bst-8e84aa83-0d0b-4a7b-94df-2719fcab5fcc.bastion.azure.com",
                "scaleUnits": 2,
                "ipConfigurations": [
                    {
                        "name": "IpConf",
                        "id": "[concat(resourceId('Microsoft.Network/bastionHosts', parameters('bastionHosts_HubVNet_Bastion_name')), '/bastionHostIpConfigurations/IpConf')]",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_hubvnet_bastion_name'))]"
                            },
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_HubVNet_name'), 'AzureBastionSubnet')]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2024-01-01",
            "name": "[parameters('networkInterfaces_backendvm772_z1_name')]",
            "location": "westeurope",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_S2Vnet_name'), 'S2SubNet')]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_BackEndVM_nsg_name'))]"
            ],
            "kind": "Regular",
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "id": "[concat(resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_backendvm772_z1_name')), '/ipConfigurations/ipconfig1')]",
                        "type": "Microsoft.Network/networkInterfaces/ipConfigurations",
                        "properties": {
                            "privateIPAddress": "10.2.0.4",
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_S2Vnet_name'), 'S2SubNet')]"
                            },
                            "primary": true,
                            "privateIPAddressVersion": "IPv4"
                        }
                    }
                ],
                "dnsSettings": {
                    "dnsServers": []
                },
                "enableAcceleratedNetworking": true,
                "enableIPForwarding": true,
                "disableTcpStateTracking": false,
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_BackEndVM_nsg_name'))]"
                },
                "nicType": "Standard",
                "auxiliaryMode": "None",
                "auxiliarySku": "None"
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2024-01-01",
            "name": "[parameters('networkInterfaces_frontendvm685_z1_name')]",
            "location": "westeurope",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_S1VNet_name'), 'S1SubNet')]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_FrontEndVMnsg303_name'))]"
            ],
            "kind": "Regular",
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "id": "[concat(resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_frontendvm685_z1_name')), '/ipConfigurations/ipconfig1')]",
                        "type": "Microsoft.Network/networkInterfaces/ipConfigurations",
                        "properties": {
                            "privateIPAddress": "10.1.0.4",
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_S1VNet_name'), 'S1SubNet')]"
                            },
                            "primary": true,
                            "privateIPAddressVersion": "IPv4"
                        }
                    }
                ],
                "dnsSettings": {
                    "dnsServers": []
                },
                "enableAcceleratedNetworking": true,
                "enableIPForwarding": true,
                "disableTcpStateTracking": false,
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_FrontEndVMnsg303_name'))]"
                },
                "nicType": "Standard",
                "auxiliaryMode": "None",
                "auxiliarySku": "None"
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2024-01-01",
            "name": "[parameters('virtualNetworks_S1VNet_name')]",
            "location": "westeurope",
            "dependsOn": [
                "[resourceId('Microsoft.Network/routeTables', parameters('routeTables_FW_RouteTable_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_HubVNet_name'))]"
            ],
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "10.1.0.0/16"
                    ]
                },
                "encryption": {
                    "enabled": false,
                    "enforcement": "AllowUnencrypted"
                },
                "subnets": [
                    {
                        "name": "S1SubNet",
                        "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_S1VNet_name'), 'S1SubNet')]",
                        "properties": {
                            "addressPrefixes": [
                                "10.1.0.0/24"
                            ],
                            "routeTable": {
                                "id": "[resourceId('Microsoft.Network/routeTables', parameters('routeTables_FW_RouteTable_name'))]"
                            },
                            "delegations": [],
                            "privateEndpointNetworkPolicies": "Disabled",
                            "privateLinkServiceNetworkPolicies": "Enabled"
                        },
                        "type": "Microsoft.Network/virtualNetworks/subnets"
                    }
                ],
                "virtualNetworkPeerings": [
                    {
                        "name": "Hub2S1",
                        "id": "[resourceId('Microsoft.Network/virtualNetworks/virtualNetworkPeerings', parameters('virtualNetworks_S1VNet_name'), 'Hub2S1')]",
                        "properties": {
                            "peeringState": "Connected",
                            "peeringSyncLevel": "FullyInSync",
                            "remoteVirtualNetwork": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_HubVNet_name'))]"
                            },
                            "allowVirtualNetworkAccess": true,
                            "allowForwardedTraffic": true,
                            "allowGatewayTransit": false,
                            "useRemoteGateways": false,
                            "doNotVerifyRemoteGateways": false,
                            "peerCompleteVnets": true,
                            "remoteAddressSpace": {
                                "addressPrefixes": [
                                    "10.0.0.0/16"
                                ]
                            },
                            "remoteVirtualNetworkAddressSpace": {
                                "addressPrefixes": [
                                    "10.0.0.0/16"
                                ]
                            }
                        },
                        "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings"
                    }
                ],
                "enableDdosProtection": false
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2024-01-01",
            "name": "[parameters('virtualNetworks_S2Vnet_name')]",
            "location": "westeurope",
            "dependsOn": [
                "[resourceId('Microsoft.Network/routeTables', parameters('routeTables_FW_RouteTable_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_HubVNet_name'))]"
            ],
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "10.2.0.0/16"
                    ]
                },
                "encryption": {
                    "enabled": false,
                    "enforcement": "AllowUnencrypted"
                },
                "subnets": [
                    {
                        "name": "S2SubNet",
                        "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_S2Vnet_name'), 'S2SubNet')]",
                        "properties": {
                            "addressPrefixes": [
                                "10.2.0.0/24"
                            ],
                            "routeTable": {
                                "id": "[resourceId('Microsoft.Network/routeTables', parameters('routeTables_FW_RouteTable_name'))]"
                            },
                            "delegations": [],
                            "privateEndpointNetworkPolicies": "Disabled",
                            "privateLinkServiceNetworkPolicies": "Enabled"
                        },
                        "type": "Microsoft.Network/virtualNetworks/subnets"
                    }
                ],
                "virtualNetworkPeerings": [
                    {
                        "name": "Hub2S2",
                        "id": "[resourceId('Microsoft.Network/virtualNetworks/virtualNetworkPeerings', parameters('virtualNetworks_S2Vnet_name'), 'Hub2S2')]",
                        "properties": {
                            "peeringState": "Connected",
                            "peeringSyncLevel": "FullyInSync",
                            "remoteVirtualNetwork": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_HubVNet_name'))]"
                            },
                            "allowVirtualNetworkAccess": true,
                            "allowForwardedTraffic": false,
                            "allowGatewayTransit": false,
                            "useRemoteGateways": false,
                            "doNotVerifyRemoteGateways": false,
                            "peerCompleteVnets": true,
                            "remoteAddressSpace": {
                                "addressPrefixes": [
                                    "10.0.0.0/16"
                                ]
                            },
                            "remoteVirtualNetworkAddressSpace": {
                                "addressPrefixes": [
                                    "10.0.0.0/16"
                                ]
                            }
                        },
                        "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings"
                    }
                ],
                "enableDdosProtection": false
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2024-01-01",
            "name": "[concat(parameters('virtualNetworks_HubVNet_name'), '/AppGetwaySubnet')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_HubVNet_name'))]",
                "[resourceId('Microsoft.Network/applicationGateways', parameters('applicationGateways_AppGW0WAF_name'))]"
            ],
            "properties": {
                "addressPrefixes": [
                    "10.0.3.0/24"
                ],
                "applicationGatewayIPConfigurations": [
                    {
                        "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGateways_AppGW0WAF_name')), '/gatewayIPConfigurations/appGatewayIpConfig')]"
                    }
                ],
                "delegations": [],
                "privateEndpointNetworkPolicies": "Disabled",
                "privateLinkServiceNetworkPolicies": "Enabled"
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2024-01-01",
            "name": "[concat(parameters('virtualNetworks_S1VNet_name'), '/S1SubNet')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_S1VNet_name'))]",
                "[resourceId('Microsoft.Network/routeTables', parameters('routeTables_FW_RouteTable_name'))]"
            ],
            "properties": {
                "addressPrefixes": [
                    "10.1.0.0/24"
                ],
                "routeTable": {
                    "id": "[resourceId('Microsoft.Network/routeTables', parameters('routeTables_FW_RouteTable_name'))]"
                },
                "delegations": [],
                "privateEndpointNetworkPolicies": "Disabled",
                "privateLinkServiceNetworkPolicies": "Enabled"
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2024-01-01",
            "name": "[concat(parameters('virtualNetworks_S2Vnet_name'), '/S2SubNet')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_S2Vnet_name'))]",
                "[resourceId('Microsoft.Network/routeTables', parameters('routeTables_FW_RouteTable_name'))]"
            ],
            "properties": {
                "addressPrefixes": [
                    "10.2.0.0/24"
                ],
                "routeTable": {
                    "id": "[resourceId('Microsoft.Network/routeTables', parameters('routeTables_FW_RouteTable_name'))]"
                },
                "delegations": [],
                "privateEndpointNetworkPolicies": "Disabled",
                "privateLinkServiceNetworkPolicies": "Enabled"
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
            "apiVersion": "2024-01-01",
            "name": "[concat(parameters('virtualNetworks_S1VNet_name'), '/Hub2S1')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_S1VNet_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_HubVNet_name'))]"
            ],
            "properties": {
                "peeringState": "Connected",
                "peeringSyncLevel": "FullyInSync",
                "remoteVirtualNetwork": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_HubVNet_name'))]"
                },
                "allowVirtualNetworkAccess": true,
                "allowForwardedTraffic": true,
                "allowGatewayTransit": false,
                "useRemoteGateways": false,
                "doNotVerifyRemoteGateways": false,
                "peerCompleteVnets": true,
                "remoteAddressSpace": {
                    "addressPrefixes": [
                        "10.0.0.0/16"
                    ]
                },
                "remoteVirtualNetworkAddressSpace": {
                    "addressPrefixes": [
                        "10.0.0.0/16"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
            "apiVersion": "2024-01-01",
            "name": "[concat(parameters('virtualNetworks_S2Vnet_name'), '/Hub2S2')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_S2Vnet_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_HubVNet_name'))]"
            ],
            "properties": {
                "peeringState": "Connected",
                "peeringSyncLevel": "FullyInSync",
                "remoteVirtualNetwork": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_HubVNet_name'))]"
                },
                "allowVirtualNetworkAccess": true,
                "allowForwardedTraffic": false,
                "allowGatewayTransit": false,
                "useRemoteGateways": false,
                "doNotVerifyRemoteGateways": false,
                "peerCompleteVnets": true,
                "remoteAddressSpace": {
                    "addressPrefixes": [
                        "10.0.0.0/16"
                    ]
                },
                "remoteVirtualNetworkAddressSpace": {
                    "addressPrefixes": [
                        "10.0.0.0/16"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
            "apiVersion": "2024-01-01",
            "name": "[concat(parameters('virtualNetworks_HubVNet_name'), '/S12Hub')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_HubVNet_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_S1VNet_name'))]"
            ],
            "properties": {
                "peeringState": "Connected",
                "peeringSyncLevel": "FullyInSync",
                "remoteVirtualNetwork": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_S1VNet_name'))]"
                },
                "allowVirtualNetworkAccess": true,
                "allowForwardedTraffic": true,
                "allowGatewayTransit": false,
                "useRemoteGateways": false,
                "doNotVerifyRemoteGateways": false,
                "peerCompleteVnets": true,
                "remoteAddressSpace": {
                    "addressPrefixes": [
                        "10.1.0.0/16"
                    ]
                },
                "remoteVirtualNetworkAddressSpace": {
                    "addressPrefixes": [
                        "10.1.0.0/16"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
            "apiVersion": "2024-01-01",
            "name": "[concat(parameters('virtualNetworks_HubVNet_name'), '/S22Hub')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_HubVNet_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_S2Vnet_name'))]"
            ],
            "properties": {
                "peeringState": "Connected",
                "peeringSyncLevel": "FullyInSync",
                "remoteVirtualNetwork": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_S2Vnet_name'))]"
                },
                "allowVirtualNetworkAccess": true,
                "allowForwardedTraffic": true,
                "allowGatewayTransit": false,
                "useRemoteGateways": false,
                "doNotVerifyRemoteGateways": false,
                "peerCompleteVnets": true,
                "remoteAddressSpace": {
                    "addressPrefixes": [
                        "10.2.0.0/16"
                    ]
                },
                "remoteVirtualNetworkAddressSpace": {
                    "addressPrefixes": [
                        "10.2.0.0/16"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Network/applicationGateways",
            "apiVersion": "2024-01-01",
            "name": "[parameters('applicationGateways_AppGW0WAF_name')]",
            "location": "westeurope",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_HubVNet_name'), 'AppGetwaySubnet')]",
                "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_PIPGW_name'))]",
                "[resourceId('Microsoft.Network/ApplicationGatewayWebApplicationFirewallPolicies', parameters('ApplicationGatewayWebApplicationFirewallPolicies_WAFPolicy_name'))]"
            ],
            "zones": [
                "1",
                "2",
                "3"
            ],
            "properties": {
                "sku": {
                    "name": "WAF_v2",
                    "tier": "WAF_v2",
                    "family": "Generation_1"
                },
                "gatewayIPConfigurations": [
                    {
                        "name": "appGatewayIpConfig",
                        "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGateways_AppGW0WAF_name')), '/gatewayIPConfigurations/appGatewayIpConfig')]",
                        "properties": {
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_HubVNet_name'), 'AppGetwaySubnet')]"
                            }
                        }
                    }
                ],
                "sslCertificates": [],
                "trustedRootCertificates": [],
                "trustedClientCertificates": [],
                "sslProfiles": [],
                "frontendIPConfigurations": [
                    {
                        "name": "appGwPublicFrontendIpIPv4",
                        "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGateways_AppGW0WAF_name')), '/frontendIPConfigurations/appGwPublicFrontendIpIPv4')]",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_PIPGW_name'))]"
                            }
                        }
                    }
                ],
                "frontendPorts": [
                    {
                        "name": "port_80",
                        "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGateways_AppGW0WAF_name')), '/frontendPorts/port_80')]",
                        "properties": {
                            "port": 80
                        }
                    }
                ],
                "backendAddressPools": [
                    {
                        "name": "BackEndPool",
                        "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGateways_AppGW0WAF_name')), '/backendAddressPools/BackEndPool')]",
                        "properties": {
                            "backendAddresses": [
                                {
                                    "ipAddress": "10.1.0.4"
                                }
                            ]
                        }
                    }
                ],
                "loadDistributionPolicies": [],
                "backendHttpSettingsCollection": [
                    {
                        "name": "BackEnd",
                        "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGateways_AppGW0WAF_name')), '/backendHttpSettingsCollection/BackEnd')]",
                        "properties": {
                            "port": 80,
                            "protocol": "Http",
                            "cookieBasedAffinity": "Enabled",
                            "connectionDraining": {
                                "enabled": true,
                                "drainTimeoutInSec": 60
                            },
                            "pickHostNameFromBackendAddress": false,
                            "affinityCookieName": "ApplicationGatewayAffinity",
                            "requestTimeout": 100
                        }
                    }
                ],
                "backendSettingsCollection": [],
                "httpListeners": [
                    {
                        "name": "AppGateWayListener",
                        "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGateways_AppGW0WAF_name')), '/httpListeners/AppGateWayListener')]",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGateways_AppGW0WAF_name')), '/frontendIPConfigurations/appGwPublicFrontendIpIPv4')]"
                            },
                            "frontendPort": {
                                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGateways_AppGW0WAF_name')), '/frontendPorts/port_80')]"
                            },
                            "protocol": "Http",
                            "hostNames": [],
                            "requireServerNameIndication": false,
                            "customErrorConfigurations": []
                        }
                    }
                ],
                "listeners": [],
                "urlPathMaps": [],
                "requestRoutingRules": [
                    {
                        "name": "AppRoutingrule",
                        "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGateways_AppGW0WAF_name')), '/requestRoutingRules/AppRoutingrule')]",
                        "properties": {
                            "ruleType": "Basic",
                            "priority": 100,
                            "httpListener": {
                                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGateways_AppGW0WAF_name')), '/httpListeners/AppGateWayListener')]"
                            },
                            "backendAddressPool": {
                                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGateways_AppGW0WAF_name')), '/backendAddressPools/BackEndPool')]"
                            },
                            "backendHttpSettings": {
                                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGateways_AppGW0WAF_name')), '/backendHttpSettingsCollection/BackEnd')]"
                            }
                        }
                    }
                ],
                "routingRules": [],
                "probes": [],
                "rewriteRuleSets": [],
                "redirectConfigurations": [],
                "privateLinkConfigurations": [],
                "enableHttp2": true,
                "forceFirewallPolicyAssociation": true,
                "autoscaleConfiguration": {
                    "minCapacity": 1,
                    "maxCapacity": 3
                },
                "firewallPolicy": {
                    "id": "[resourceId('Microsoft.Network/ApplicationGatewayWebApplicationFirewallPolicies', parameters('ApplicationGatewayWebApplicationFirewallPolicies_WAFPolicy_name'))]"
                }
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2024-01-01",
            "name": "[parameters('virtualNetworks_HubVNet_name')]",
            "location": "westeurope",
            "dependsOn": [
                "[resourceId('Microsoft.Network/applicationGateways', parameters('applicationGateways_AppGW0WAF_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_S1VNet_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_S2Vnet_name'))]"
            ],
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "10.0.0.0/16"
                    ]
                },
                "encryption": {
                    "enabled": false,
                    "enforcement": "AllowUnencrypted"
                },
                "subnets": [
                    {
                        "name": "AppGetwaySubnet",
                        "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_HubVNet_name'), 'AppGetwaySubnet')]",
                        "properties": {
                            "addressPrefixes": [
                                "10.0.3.0/24"
                            ],
                            "applicationGatewayIPConfigurations": [
                                {
                                    "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGateways_AppGW0WAF_name')), '/gatewayIPConfigurations/appGatewayIpConfig')]"
                                }
                            ],
                            "delegations": [],
                            "privateEndpointNetworkPolicies": "Disabled",
                            "privateLinkServiceNetworkPolicies": "Enabled"
                        },
                        "type": "Microsoft.Network/virtualNetworks/subnets"
                    },
                    {
                        "name": "AzureBastionSubnet",
                        "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_HubVNet_name'), 'AzureBastionSubnet')]",
                        "properties": {
                            "addressPrefixes": [
                                "10.0.1.0/26"
                            ],
                            "delegations": [],
                            "privateEndpointNetworkPolicies": "Disabled",
                            "privateLinkServiceNetworkPolicies": "Enabled"
                        },
                        "type": "Microsoft.Network/virtualNetworks/subnets"
                    },
                    {
                        "name": "AzureFirewallSubnet",
                        "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_HubVNet_name'), 'AzureFirewallSubnet')]",
                        "properties": {
                            "addressPrefixes": [
                                "10.0.0.192/26"
                            ],
                            "delegations": [],
                            "privateEndpointNetworkPolicies": "Disabled",
                            "privateLinkServiceNetworkPolicies": "Enabled"
                        },
                        "type": "Microsoft.Network/virtualNetworks/subnets"
                    }
                ],
                "virtualNetworkPeerings": [
                    {
                        "name": "S12Hub",
                        "id": "[resourceId('Microsoft.Network/virtualNetworks/virtualNetworkPeerings', parameters('virtualNetworks_HubVNet_name'), 'S12Hub')]",
                        "properties": {
                            "peeringState": "Connected",
                            "peeringSyncLevel": "FullyInSync",
                            "remoteVirtualNetwork": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_S1VNet_name'))]"
                            },
                            "allowVirtualNetworkAccess": true,
                            "allowForwardedTraffic": true,
                            "allowGatewayTransit": false,
                            "useRemoteGateways": false,
                            "doNotVerifyRemoteGateways": false,
                            "peerCompleteVnets": true,
                            "remoteAddressSpace": {
                                "addressPrefixes": [
                                    "10.1.0.0/16"
                                ]
                            },
                            "remoteVirtualNetworkAddressSpace": {
                                "addressPrefixes": [
                                    "10.1.0.0/16"
                                ]
                            }
                        },
                        "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings"
                    },
                    {
                        "name": "S22Hub",
                        "id": "[resourceId('Microsoft.Network/virtualNetworks/virtualNetworkPeerings', parameters('virtualNetworks_HubVNet_name'), 'S22Hub')]",
                        "properties": {
                            "peeringState": "Connected",
                            "peeringSyncLevel": "FullyInSync",
                            "remoteVirtualNetwork": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_S2Vnet_name'))]"
                            },
                            "allowVirtualNetworkAccess": true,
                            "allowForwardedTraffic": true,
                            "allowGatewayTransit": false,
                            "useRemoteGateways": false,
                            "doNotVerifyRemoteGateways": false,
                            "peerCompleteVnets": true,
                            "remoteAddressSpace": {
                                "addressPrefixes": [
                                    "10.2.0.0/16"
                                ]
                            },
                            "remoteVirtualNetworkAddressSpace": {
                                "addressPrefixes": [
                                    "10.2.0.0/16"
                                ]
                            }
                        },
                        "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings"
                    }
                ],
                "enableDdosProtection": false
            }
        }
    ]
}